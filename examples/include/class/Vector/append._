#ifndef   VECTOR__APPEND__
#define   VECTOR__APPEND__

#include "Vector._"

protocol_(Bool_, (Vector, append),
(let Ptr (Vector_), this),
(let Ptr (Void), data))
	pre_(validate_(Vector, this));
	pre_((this->species implies  validate(this->species, data)));
	Var   type = this->type;
	this->type = (Type)typex_(Iterable, Vector);
	Var success= verifier_(Iterable, append)
	(_site, abstract_(Iterable, this), data);
	this->type = type;
	post_((success implies  data == this->array[this->count - 1]));
	return success;
end

#endif

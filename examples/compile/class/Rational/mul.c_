#include  "Rational/validate._"

procedure_(Rational_*, (Rational, mul),
(let  Ptr (Rational_), product),
(let  Ptr (Rational ), multiplier),
(let  Ptr (Rational ), multiplicand))
	Var value  =  multiplier->value * multiplicand->value;
	guard_(validator(value), NULL)
	Var result = need__(product);
	guard_(result, NULL)
	if (!product) result->type = type_(Rational);
	result->value = value;
	return result;
end
